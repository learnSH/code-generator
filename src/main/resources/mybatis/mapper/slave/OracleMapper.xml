<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ricky.project.mapper.slave.OracleMapper">

	<resultMap type="GenTable" id="GenTableResult">
	    <id     property="tableId"        column="table_id"          />
        <result property="dataSourceId"   column="data_source_id"          />
		<result property="tableName"      column="table_name"        />
		<result property="tableComment"   column="table_comment"     />
		<result property="subTableName"   column="sub_table_name"    />
		<result property="subTableFkName" column="sub_table_fk_name" />
		<result property="className"      column="class_name"        />
		<result property="tplCategory"    column="tpl_category"      />
		<result property="packageName"    column="package_name"      />
		<result property="moduleName"     column="module_name"       />
		<result property="businessName"   column="business_name"     />
		<result property="functionName"   column="function_name"     />
		<result property="functionAuthor" column="function_author"   />
		<result property="genType"        column="gen_type"          />
		<result property="genPath"        column="gen_path"          />
		<result property="options"        column="options"           />
		<result property="createBy"       column="create_by"         />
		<result property="createTime"     column="create_time"       />
		<result property="updateBy"       column="update_by"         />
		<result property="updateTime"     column="update_time"       />
		<result property="remark"         column="remark"            />
		<collection property="columns" javaType="java.util.List" resultMap="GenTableColumnResult" />
	</resultMap>
	
	<resultMap type="GenTableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>
	
	<sql id="selectGenTableVo">
        select table_id, data_source_id, table_name, table_comment, sub_table_name, sub_table_fk_name, class_name, tpl_category, package_name, module_name, business_name, function_name, function_author, gen_type, gen_path, options, create_by, create_time, update_by, update_time, remark from gen_table
    </sql>
	
    <select id="selectDbTableList" parameterType="GenTable" resultMap="GenTableResult">
        select lower(dt.table_name) as table_name, dtc.comments as table_comment, uo.created as create_time, uo.last_ddl_time as update_time
        from user_tables dt, user_tab_comments dtc, user_objects uo
        where dt.table_name = dtc.table_name
        and dt.table_name = uo.object_name
        and uo.object_type = 'TABLE'
        AND dt.table_name NOT LIKE 'QRTZ_%' AND dt.table_name NOT LIKE 'GEN_%'
        <if test="tableName != null and tableName != ''">
            AND lower(dt.table_name)  like lower(concat(concat('%', #{tableName}), '%'))
        </if>
        <if test="tableComment != null and tableComment != ''">
            AND lower(dtc.comments) like lower(concat(concat('%', #{tableComment}), '%'))
        </if>
    </select>
	
    <select id="selectDbTableListByNames" resultMap="GenTableResult">
        select lower(dt.table_name) as table_name, dtc.comments as table_comment, uo.created as create_time, uo.last_ddl_time as update_time
        from user_tables dt, user_tab_comments dtc, user_objects uo
        where dt.table_name = dtc.table_name
        and dt.table_name = uo.object_name
        and uo.object_type = 'TABLE'
        AND dt.table_name NOT LIKE 'QRTZ_%' AND dt.table_name NOT LIKE 'GEN_%'
        and lower(dt.table_name) in
        <foreach collection="array" item="name" open="(" separator="," close=")">
            #{name}
        </foreach> 
    </select>
    
    <select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult">
		 select lower(temp.column_name) as column_name,
                (case when (temp.nullable = 'N'  and  temp.constraint_type != 'P') then '1' else null end) as is_required,
                (case when temp.constraint_type = 'P' then '1' else '0' end) as is_pk,
                temp.column_id as sort,
                temp.comments as column_comment,
                (case when temp.constraint_type = 'P' then '1' else '0' end) as is_increment,
                lower(temp.data_type) as column_type
           from (
                  select col.column_id, col.column_name,col.nullable, col.data_type, colc.comments, uc.constraint_type
                       , row_number() over (partition by col.column_name order by uc.constraint_type desc) as row_flg
                  from user_tab_columns col
                  left join user_col_comments colc on colc.table_name = col.table_name and colc.column_name = col.column_name
                  left join user_cons_columns ucc on ucc.table_name = col.table_name and ucc.column_name = col.column_name
                  left join user_constraints uc on uc.constraint_name = ucc.constraint_name
                 where col.table_name = upper(#{tableName})
                  ) temp
           WHERE temp.row_flg = 1
          ORDER BY temp.column_id
	</select>
</mapper> 